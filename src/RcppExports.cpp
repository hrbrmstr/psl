// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// apex_domain
CharacterVector apex_domain(CharacterVector domains);
RcppExport SEXP _psl_apex_domain(SEXP domainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type domains(domainsSEXP);
    rcpp_result_gen = Rcpp::wrap(apex_domain(domains));
    return rcpp_result_gen;
END_RCPP
}
// public_suffix
CharacterVector public_suffix(CharacterVector domains);
RcppExport SEXP _psl_public_suffix(SEXP domainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type domains(domainsSEXP);
    rcpp_result_gen = Rcpp::wrap(public_suffix(domains));
    return rcpp_result_gen;
END_RCPP
}
// is_public_suffix
LogicalVector is_public_suffix(CharacterVector domains);
RcppExport SEXP _psl_is_public_suffix(SEXP domainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type domains(domainsSEXP);
    rcpp_result_gen = Rcpp::wrap(is_public_suffix(domains));
    return rcpp_result_gen;
END_RCPP
}
// suffix_extract
DataFrame suffix_extract(CharacterVector domains);
RcppExport SEXP _psl_suffix_extract(SEXP domainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type domains(domainsSEXP);
    rcpp_result_gen = Rcpp::wrap(suffix_extract(domains));
    return rcpp_result_gen;
END_RCPP
}
// suffix_extract2
DataFrame suffix_extract2(CharacterVector domains);
RcppExport SEXP _psl_suffix_extract2(SEXP domainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type domains(domainsSEXP);
    rcpp_result_gen = Rcpp::wrap(suffix_extract2(domains));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_psl_apex_domain", (DL_FUNC) &_psl_apex_domain, 1},
    {"_psl_public_suffix", (DL_FUNC) &_psl_public_suffix, 1},
    {"_psl_is_public_suffix", (DL_FUNC) &_psl_is_public_suffix, 1},
    {"_psl_suffix_extract", (DL_FUNC) &_psl_suffix_extract, 1},
    {"_psl_suffix_extract2", (DL_FUNC) &_psl_suffix_extract2, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_psl(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
